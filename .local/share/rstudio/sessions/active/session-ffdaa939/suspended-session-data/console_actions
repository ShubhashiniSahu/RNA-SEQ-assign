{
    "type": [
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1
    ],
    "data": [
        "+ ",
        "  arrange(padj) %>%",
        "+ ",
        "  DT::datatable()",
        "> ",
        "filtered_pathway <- subset(fgsea, NES > 1.2)",
        "> ",
        "filtered_pathway",
        "> ",
        "",
        "> ",
        "filt_up <- as.vector(filtered_pathway$pathway)",
        "> ",
        "",
        "> ",
        "for (i in filt_up){",
        "+ ",
        "    plt <- plotEnrichment(pathway = pathway[[i]],",
        "+ ",
        "    gseaParam = 1, ticksSize = 0.5, stats= rank) +",
        "+ ",
        "    labs(title=i) + theme(plot.title = element_text(hjust = 0.5, face=\"bold\"))",
        "+ ",
        "    print(plt)",
        "+ ",
        "}",
        "> ",
        "filtered_pathway <- subset(fgsea, NES < -1.2)",
        "> ",
        "filtered_pathway",
        "> ",
        "",
        "> ",
        "filt_down <- as.vector(filtered_pathway$pathway)",
        "> ",
        "",
        "> ",
        "for (i in filt_down){",
        "+ ",
        "    plt <- plotEnrichment(pathway = pathway[[i]],",
        "+ ",
        "    gseaParam = 1, ticksSize = 0.5, stats= rank) +",
        "+ ",
        "    labs(title=i) + theme(plot.title = element_text(hjust = 0.5, face=\"bold\"))",
        "+ ",
        "    print(plt)",
        "+ ",
        "}",
        "\nAttaching package: ‘gridExtra’\n\n",
        "The following object is masked from ‘package:dplyr’:\n\n    combine\n\n",
        "The following object is masked from ‘package:Biobase’:\n\n    combine\n\n",
        "The following object is masked from ‘package:BiocGenerics’:\n\n    combine\n\n",
        "\nAttaching package: ‘igraph’\n\n",
        "The following objects are masked from ‘package:lubridate’:\n\n    %--%, union\n\n",
        "The following objects are masked from ‘package:dplyr’:\n\n    as_data_frame, groups, union\n\n",
        "The following objects are masked from ‘package:purrr’:\n\n    compose, simplify\n\n",
        "The following object is masked from ‘package:tidyr’:\n\n    crossing\n\n",
        "The following object is masked from ‘package:tibble’:\n\n    as_data_frame\n\n",
        "The following object is masked from ‘package:GenomicRanges’:\n\n    union\n\n",
        "The following object is masked from ‘package:IRanges’:\n\n    union\n\n",
        "The following object is masked from ‘package:S4Vectors’:\n\n    union\n\n",
        "The following objects are masked from ‘package:BiocGenerics’:\n\n    normalize, path, union\n\n",
        "The following objects are masked from ‘package:stats’:\n\n    decompose, spectrum\n\n",
        "The following object is masked from ‘package:base’:\n\n    union\n\n",
        "Registered S3 methods overwritten by 'treeio':\n  method              from    \n  MRCA.phylo          tidytree\n  MRCA.treedata       tidytree\n  Nnode.treedata      tidytree\n  Ntip.treedata       tidytree\n  ancestor.phylo      tidytree\n  ancestor.treedata   tidytree\n  child.phylo         tidytree\n  child.treedata      tidytree\n  full_join.phylo     tidytree\n  full_join.treedata  tidytree\n  groupClade.phylo    tidytree\n  groupClade.treedata tidytree\n  groupOTU.phylo      tidytree\n  groupOTU.treedata   tidytree\n  inner_join.phylo    tidytree\n  inner_join.treedata tidytree\n  is.rooted.treedata  tidytree\n  nodeid.phylo        tidytree\n  nodeid.treedata     tidytree\n  nodelab.phylo       tidytree\n  nodelab.treedata    tidytree\n  offspring.phylo     tidytree\n  offspring.treedata  tidytree\n  parent.phylo        tidytree\n  parent.treedata     tidytree\n  root.treedata       tidytree\n  rootnode.phylo      tidytree\n  sibling.phylo       tidytree\n",
        "clusterProfiler v4.8.3  For help: https://yulab-smu.top/biomedical-knowledge-mining-book/\n\nIf you use clusterProfiler in published research, please cite:\nT Wu, E Hu, S Xu, M Chen, P Guo, Z Dai, T Feng, L Zhou, W Tang, L Zhan, X Fu, S Liu, X Bo, and G Yu. clusterProfiler 4.0: A universal enrichment tool for interpreting omics data. The Innovation. 2021, 2(3):100141\n",
        "\nAttaching package: ‘clusterProfiler’\n\n",
        "The following object is masked from ‘package:igraph’:\n\n    simplify\n\n",
        "The following object is masked from ‘package:purrr’:\n\n    simplify\n\n",
        "The following object is masked from ‘package:biomaRt’:\n\n    select\n\n",
        "The following objects are masked from ‘package:plyr’:\n\n    arrange, mutate, rename, summarise\n\n",
        "The following object is masked from ‘package:AnnotationDbi’:\n\n    select\n\n",
        "The following object is masked from ‘package:IRanges’:\n\n    slice\n\n",
        "The following object is masked from ‘package:S4Vectors’:\n\n    rename\n\n",
        "The following object is masked from ‘package:stats’:\n\n    filter\n\n",
        "========================================\nComplexHeatmap version 2.16.0\nBioconductor page: http://bioconductor.org/packages/ComplexHeatmap/\nGithub page: https://github.com/jokergoo/ComplexHeatmap\nDocumentation: http://jokergoo.github.io/ComplexHeatmap-reference\n\nIf you use it in published research, please cite either one:\n- Gu, Z. Complex Heatmap Visualization. iMeta 2022.\n- Gu, Z. Complex heatmaps reveal patterns and correlations in multidimensional \n    genomic data. Bioinformatics 2016.\n\n\nThe new InteractiveComplexHeatmap package can directly export static \ncomplex heatmaps into an interactive Shiny app with zero effort. Have a try!\n\nThis message can be suppressed by:\n  suppressPackageStartupMessages(library(ComplexHeatmap))\n========================================\n! pheatmap() has been masked by ComplexHeatmap::pheatmap(). Most of the arguments\n   in the original pheatmap() are identically supported in the new function. You \n   can still use the original function by explicitly calling pheatmap::pheatmap().\n\n",
        "\nAttaching package: ‘ComplexHeatmap’\n\n",
        "The following object is masked from ‘package:pheatmap’:\n\n    pheatmap\n\n",
        "========================================\ncirclize version 0.4.15\nCRAN page: https://cran.r-project.org/package=circlize\nGithub page: https://github.com/jokergoo/circlize\nDocumentation: https://jokergoo.github.io/circlize_book/book/\n\nIf you use it in published research, please cite:\nGu, Z. circlize implements and enhances circular visualization\n  in R. Bioinformatics 2014.\n\nThis message can be suppressed by:\n  suppressPackageStartupMessages(library(circlize))\n========================================\n\n",
        "\nAttaching package: ‘circlize’\n\n",
        "The following object is masked from ‘package:igraph’:\n\n    degree\n\n",
        "\nAttaching package: ‘ggpubr’\n\n",
        "The following object is masked from ‘package:plyr’:\n\n    mutate\n\n",
        "> ",
        "filtered_pathway <- subset(fgsea, NES > 0.8)",
        "> ",
        "filtered_pathway",
        "> ",
        "",
        "> ",
        "filt_up <- as.vector(filtered_pathway$pathway)",
        "> ",
        "",
        "> ",
        "for (i in filt_up){",
        "+ ",
        "    plt <- plotEnrichment(pathway = pathway[[i]],",
        "+ ",
        "    gseaParam = 1, ticksSize = 0.5, stats= rank) +",
        "+ ",
        "    labs(title=i) + theme(plot.title = element_text(hjust = 0.5, face=\"bold\"))",
        "+ ",
        "    print(plt)",
        "+ ",
        "}",
        "> ",
        "filtered_pathway <- subset(fgsea, NES > 1.8)",
        "> ",
        "filtered_pathway",
        "> ",
        "",
        "> ",
        "filt_up <- as.vector(filtered_pathway$pathway)",
        "> ",
        "",
        "> ",
        "for (i in filt_up){",
        "+ ",
        "    plt <- plotEnrichment(pathway = pathway[[i]],",
        "+ ",
        "    gseaParam = 1, ticksSize = 0.5, stats= rank) +",
        "+ ",
        "    labs(title=i) + theme(plot.title = element_text(hjust = 0.5, face=\"bold\"))",
        "+ ",
        "    print(plt)",
        "+ ",
        "}",
        "> ",
        "filtered_pathway <- subset(fgsea, NES < -2)",
        "> ",
        "filtered_pathway",
        "Warning in `[<-.data.frame`(`*tmp*`, is_list, value = list(`8` = \"<>\")) :",
        "\n ",
        " replacement element 1 has 1 row to replace 0 rows\n",
        "> ",
        "",
        "> ",
        "filt_down <- as.vector(filtered_pathway$pathway)",
        "> ",
        "",
        "> ",
        "for (i in filt_down){",
        "+ ",
        "    plt <- plotEnrichment(pathway = pathway[[i]],",
        "+ ",
        "    gseaParam = 1, ticksSize = 0.5, stats= rank) +",
        "+ ",
        "    labs(title=i) + theme(plot.title = element_text(hjust = 0.5, face=\"bold\"))",
        "+ ",
        "    print(plt)",
        "+ ",
        "}",
        "> ",
        "filtered_pathway <- subset(fgsea, NES < -1.5)",
        "> ",
        "filtered_pathway",
        "> ",
        "",
        "> ",
        "filt_down <- as.vector(filtered_pathway$pathway)",
        "> ",
        "",
        "> ",
        "for (i in filt_down){",
        "+ ",
        "    plt <- plotEnrichment(pathway = pathway[[i]],",
        "+ ",
        "    gseaParam = 1, ticksSize = 0.5, stats= rank) +",
        "+ ",
        "    labs(title=i) + theme(plot.title = element_text(hjust = 0.5, face=\"bold\"))",
        "+ ",
        "    print(plt)",
        "+ ",
        "}",
        "> ",
        "filtered_pathway <- subset(fgsea, NES > 1.8)",
        "> ",
        "filtered_pathway",
        "> ",
        "filt_up <- as.vector(filtered_pathway$pathway)",
        "> ",
        "",
        "> ",
        "for (i in filt_up){",
        "+ ",
        "    plt <- plotEnrichment(pathway = pathway[[i]],",
        "+ ",
        "    gseaParam = 1, ticksSize = 0.5, stats= rank) +",
        "+ ",
        "    labs(title=i) + theme(plot.title = element_text(hjust = 0.5, face=\"bold\"))",
        "+ ",
        "    print(plt)",
        "+ ",
        "}",
        "> ",
        "filtered_pathway <- subset(fgsea, NES < -1.5)",
        "> ",
        "filtered_pathway",
        "> ",
        "filt_down <- as.vector(filtered_pathway$pathway)",
        "> ",
        "",
        "> ",
        "for (i in filt_down){",
        "+ ",
        "    plt <- plotEnrichment(pathway = pathway[[i]],",
        "+ ",
        "    gseaParam = 1, ticksSize = 0.5, stats= rank) +",
        "+ ",
        "    labs(title=i) + theme(plot.title = element_text(hjust = 0.5, face=\"bold\"))",
        "+ ",
        "    print(plt)",
        "+ ",
        "}",
        "\nAttaching package: ‘gridExtra’\n\n",
        "The following object is masked from ‘package:dplyr’:\n\n    combine\n\n",
        "The following object is masked from ‘package:Biobase’:\n\n    combine\n\n",
        "The following object is masked from ‘package:BiocGenerics’:\n\n    combine\n\n",
        "\nAttaching package: ‘igraph’\n\n",
        "The following objects are masked from ‘package:lubridate’:\n\n    %--%, union\n\n",
        "The following objects are masked from ‘package:dplyr’:\n\n    as_data_frame, groups, union\n\n",
        "The following objects are masked from ‘package:purrr’:\n\n    compose, simplify\n\n",
        "The following object is masked from ‘package:tidyr’:\n\n    crossing\n\n",
        "The following object is masked from ‘package:tibble’:\n\n    as_data_frame\n\n",
        "The following object is masked from ‘package:GenomicRanges’:\n\n    union\n\n",
        "The following object is masked from ‘package:IRanges’:\n\n    union\n\n",
        "The following object is masked from ‘package:S4Vectors’:\n\n    union\n\n",
        "The following objects are masked from ‘package:BiocGenerics’:\n\n    normalize, path, union\n\n",
        "The following objects are masked from ‘package:stats’:\n\n    decompose, spectrum\n\n",
        "The following object is masked from ‘package:base’:\n\n    union\n\n",
        "Registered S3 methods overwritten by 'treeio':\n  method              from    \n  MRCA.phylo          tidytree\n  MRCA.treedata       tidytree\n  Nnode.treedata      tidytree\n  Ntip.treedata       tidytree\n  ancestor.phylo      tidytree\n  ancestor.treedata   tidytree\n  child.phylo         tidytree\n  child.treedata      tidytree\n  full_join.phylo     tidytree\n  full_join.treedata  tidytree\n  groupClade.phylo    tidytree\n  groupClade.treedata tidytree\n  groupOTU.phylo      tidytree\n  groupOTU.treedata   tidytree\n  inner_join.phylo    tidytree\n  inner_join.treedata tidytree\n  is.rooted.treedata  tidytree\n  nodeid.phylo        tidytree\n  nodeid.treedata     tidytree\n  nodelab.phylo       tidytree\n  nodelab.treedata    tidytree\n  offspring.phylo     tidytree\n  offspring.treedata  tidytree\n  parent.phylo        tidytree\n  parent.treedata     tidytree\n  root.treedata       tidytree\n  rootnode.phylo      tidytree\n  sibling.phylo       tidytree\n",
        "clusterProfiler v4.8.3  For help: https://yulab-smu.top/biomedical-knowledge-mining-book/\n\nIf you use clusterProfiler in published research, please cite:\nT Wu, E Hu, S Xu, M Chen, P Guo, Z Dai, T Feng, L Zhou, W Tang, L Zhan, X Fu, S Liu, X Bo, and G Yu. clusterProfiler 4.0: A universal enrichment tool for interpreting omics data. The Innovation. 2021, 2(3):100141\n",
        "\nAttaching package: ‘clusterProfiler’\n\n",
        "The following object is masked from ‘package:igraph’:\n\n    simplify\n\n",
        "The following object is masked from ‘package:purrr’:\n\n    simplify\n\n",
        "The following object is masked from ‘package:biomaRt’:\n\n    select\n\n",
        "The following objects are masked from ‘package:plyr’:\n\n    arrange, mutate, rename, summarise\n\n",
        "The following object is masked from ‘package:AnnotationDbi’:\n\n    select\n\n",
        "The following object is masked from ‘package:IRanges’:\n\n    slice\n\n",
        "The following object is masked from ‘package:S4Vectors’:\n\n    rename\n\n",
        "The following object is masked from ‘package:stats’:\n\n    filter\n\n",
        "========================================\nComplexHeatmap version 2.16.0\nBioconductor page: http://bioconductor.org/packages/ComplexHeatmap/\nGithub page: https://github.com/jokergoo/ComplexHeatmap\nDocumentation: http://jokergoo.github.io/ComplexHeatmap-reference\n\nIf you use it in published research, please cite either one:\n- Gu, Z. Complex Heatmap Visualization. iMeta 2022.\n- Gu, Z. Complex heatmaps reveal patterns and correlations in multidimensional \n    genomic data. Bioinformatics 2016.\n\n\nThe new InteractiveComplexHeatmap package can directly export static \ncomplex heatmaps into an interactive Shiny app with zero effort. Have a try!\n\nThis message can be suppressed by:\n  suppressPackageStartupMessages(library(ComplexHeatmap))\n========================================\n! pheatmap() has been masked by ComplexHeatmap::pheatmap(). Most of the arguments\n   in the original pheatmap() are identically supported in the new function. You \n   can still use the original function by explicitly calling pheatmap::pheatmap().\n\n",
        "\nAttaching package: ‘ComplexHeatmap’\n\n",
        "The following object is masked from ‘package:pheatmap’:\n\n    pheatmap\n\n",
        "========================================\ncirclize version 0.4.15\nCRAN page: https://cran.r-project.org/package=circlize\nGithub page: https://github.com/jokergoo/circlize\nDocumentation: https://jokergoo.github.io/circlize_book/book/\n\nIf you use it in published research, please cite:\nGu, Z. circlize implements and enhances circular visualization\n  in R. Bioinformatics 2014.\n\nThis message can be suppressed by:\n  suppressPackageStartupMessages(library(circlize))\n========================================\n\n",
        "\nAttaching package: ‘circlize’\n\n",
        "The following object is masked from ‘package:igraph’:\n\n    degree\n\n",
        "\nAttaching package: ‘ggpubr’\n\n",
        "The following object is masked from ‘package:plyr’:\n\n    mutate\n\n",
        "\nAttaching package: ‘gridExtra’\n\n",
        "The following object is masked from ‘package:dplyr’:\n\n    combine\n\n",
        "The following object is masked from ‘package:Biobase’:\n\n    combine\n\n",
        "The following object is masked from ‘package:BiocGenerics’:\n\n    combine\n\n",
        "\nAttaching package: ‘igraph’\n\n",
        "The following objects are masked from ‘package:lubridate’:\n\n    %--%, union\n\n",
        "The following objects are masked from ‘package:dplyr’:\n\n    as_data_frame, groups, union\n\n",
        "The following objects are masked from ‘package:purrr’:\n\n    compose, simplify\n\n",
        "The following object is masked from ‘package:tidyr’:\n\n    crossing\n\n",
        "The following object is masked from ‘package:tibble’:\n\n    as_data_frame\n\n",
        "The following object is masked from ‘package:GenomicRanges’:\n\n    union\n\n",
        "The following object is masked from ‘package:IRanges’:\n\n    union\n\n",
        "The following object is masked from ‘package:S4Vectors’:\n\n    union\n\n",
        "The following objects are masked from ‘package:BiocGenerics’:\n\n    normalize, path, union\n\n",
        "The following objects are masked from ‘package:stats’:\n\n    decompose, spectrum\n\n",
        "The following object is masked from ‘package:base’:\n\n    union\n\n",
        "Registered S3 methods overwritten by 'treeio':\n  method              from    \n  MRCA.phylo          tidytree\n  MRCA.treedata       tidytree\n  Nnode.treedata      tidytree\n  Ntip.treedata       tidytree\n  ancestor.phylo      tidytree\n  ancestor.treedata   tidytree\n  child.phylo         tidytree\n  child.treedata      tidytree\n  full_join.phylo     tidytree\n  full_join.treedata  tidytree\n  groupClade.phylo    tidytree\n  groupClade.treedata tidytree\n  groupOTU.phylo      tidytree\n  groupOTU.treedata   tidytree\n  inner_join.phylo    tidytree\n  inner_join.treedata tidytree\n  is.rooted.treedata  tidytree\n  nodeid.phylo        tidytree\n  nodeid.treedata     tidytree\n  nodelab.phylo       tidytree\n  nodelab.treedata    tidytree\n  offspring.phylo     tidytree\n  offspring.treedata  tidytree\n  parent.phylo        tidytree\n  parent.treedata     tidytree\n  root.treedata       tidytree\n  rootnode.phylo      tidytree\n  sibling.phylo       tidytree\n",
        "clusterProfiler v4.8.3  For help: https://yulab-smu.top/biomedical-knowledge-mining-book/\n\nIf you use clusterProfiler in published research, please cite:\nT Wu, E Hu, S Xu, M Chen, P Guo, Z Dai, T Feng, L Zhou, W Tang, L Zhan, X Fu, S Liu, X Bo, and G Yu. clusterProfiler 4.0: A universal enrichment tool for interpreting omics data. The Innovation. 2021, 2(3):100141\n",
        "\nAttaching package: ‘clusterProfiler’\n\n",
        "The following object is masked from ‘package:igraph’:\n\n    simplify\n\n",
        "The following object is masked from ‘package:purrr’:\n\n    simplify\n\n",
        "The following object is masked from ‘package:biomaRt’:\n\n    select\n\n",
        "The following objects are masked from ‘package:plyr’:\n\n    arrange, mutate, rename, summarise\n\n",
        "The following object is masked from ‘package:AnnotationDbi’:\n\n    select\n\n",
        "The following object is masked from ‘package:IRanges’:\n\n    slice\n\n",
        "The following object is masked from ‘package:S4Vectors’:\n\n    rename\n\n",
        "The following object is masked from ‘package:stats’:\n\n    filter\n\n",
        "========================================\nComplexHeatmap version 2.16.0\nBioconductor page: http://bioconductor.org/packages/ComplexHeatmap/\nGithub page: https://github.com/jokergoo/ComplexHeatmap\nDocumentation: http://jokergoo.github.io/ComplexHeatmap-reference\n\nIf you use it in published research, please cite either one:\n- Gu, Z. Complex Heatmap Visualization. iMeta 2022.\n- Gu, Z. Complex heatmaps reveal patterns and correlations in multidimensional \n    genomic data. Bioinformatics 2016.\n\n\nThe new InteractiveComplexHeatmap package can directly export static \ncomplex heatmaps into an interactive Shiny app with zero effort. Have a try!\n\nThis message can be suppressed by:\n  suppressPackageStartupMessages(library(ComplexHeatmap))\n========================================\n! pheatmap() has been masked by ComplexHeatmap::pheatmap(). Most of the arguments\n   in the original pheatmap() are identically supported in the new function. You \n   can still use the original function by explicitly calling pheatmap::pheatmap().\n\n",
        "\nAttaching package: ‘ComplexHeatmap’\n\n",
        "The following object is masked from ‘package:pheatmap’:\n\n    pheatmap\n\n",
        "========================================\ncirclize version 0.4.15\nCRAN page: https://cran.r-project.org/package=circlize\nGithub page: https://github.com/jokergoo/circlize\nDocumentation: https://jokergoo.github.io/circlize_book/book/\n\nIf you use it in published research, please cite:\nGu, Z. circlize implements and enhances circular visualization\n  in R. Bioinformatics 2014.\n\nThis message can be suppressed by:\n  suppressPackageStartupMessages(library(circlize))\n========================================\n\n",
        "\nAttaching package: ‘circlize’\n\n",
        "The following object is masked from ‘package:igraph’:\n\n    degree\n\n",
        "\nAttaching package: ‘ggpubr’\n\n",
        "The following object is masked from ‘package:plyr’:\n\n    mutate\n\n",
        "> ",
        "library(dplyr)",
        "> ",
        "library(biomaRt)",
        "> ",
        "library(tximport)",
        "> ",
        "library(rhdf5)",
        "> ",
        "library(gplots)",
        "> ",
        "library(org.Hs.eg.db)",
        "> ",
        "library(DESeq2)",
        "> ",
        "library(DT)",
        "> ",
        "library(apeglm)",
        "> ",
        "library(RColorBrewer)",
        "> ",
        "library(IHW)",
        "> ",
        "library(PCAtools)",
        "> ",
        "library(pheatmap)",
        "> ",
        "library(clusterProfiler)",
        "> ",
        "library(EnhancedVolcano)",
        "> ",
        "library(ComplexHeatmap)",
        "> ",
        "library(circlize)",
        "> ",
        "library(fgsea)",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(ggpubr)",
        "> ",
        "quant_dir <- \"/home/rstudio\"",
        "> ",
        "list.files(quant_dir)",
        " [1] \"analysis-assign.Rmd\"                 \"c6.all.v2023.2.Hs.symbols.gmt\"      \n [3] \"control_1\"                           \"control_2\"                          \n [5] \"control_3\"                           \"log2_counts.txt\"                    \n [7] \"normalised_counts.txt\"               \"samples.csv\"                        \n [9] \"tumour_1\"                            \"tumour_2\"                           \n[11] \"tumour_3\"                            \"tumour_vs_control_downregulated.txt\"\n[13] \"tumour_vs_control_upregulated.txt\"  ",
        "\n",
        "> ",
        "samples <- read.csv(paste0(quant_dir, \"/samples.csv\"), header=T, row.names = \"samples\", stringsAsFactors = T)",
        "> ",
        "samples",
        "> ",
        "samples$replicates <- factor(samples$replicates)",
        "> ",
        "",
        "> ",
        "factor_cols <- sapply(samples, is.factor)",
        "> ",
        "factor_cols",
        " condition replicates \n      TRUE       TRUE \n",
        "> ",
        "files <- file.path(quant_dir, rownames(samples), \"abundance.tsv\")",
        "> ",
        "names(files) <- paste0(rownames(samples))",
        "> ",
        "files",
        "                              control_1                               control_2 \n\"/home/rstudio/control_1/abundance.tsv\" \"/home/rstudio/control_2/abundance.tsv\" \n                              control_3                                tumour_1 \n\"/home/rstudio/control_3/abundance.tsv\"  \"/home/rstudio/tumour_1/abundance.tsv\" \n                               tumour_2                                tumour_3 \n \"/home/rstudio/tumour_2/abundance.tsv\"  \"/home/rstudio/tumour_3/abundance.tsv\" \n",
        "> ",
        "mart <- useMart(biomart = \"ensembl\", dataset = \"hsapiens_gene_ensembl\")",
        "> ",
        "",
        "> ",
        "#The below code line is used to retrieve and display gene annotation information, specifically Ensembl transcript IDs and corresponding HGNC symbols, from an Ensembl database",
        "> ",
        "tx2gene <- getBM(attributes = c(\"ensembl_transcript_id_version\", \"hgnc_symbol\"), mart = mart, useCache = FALSE)",
        "> ",
        "head(tx2gene)",
        "> ",
        "txi <- tximport(files, type = \"kallisto\", tx2gene = tx2gene)",
        "> ",
        "head(txi$abundance)",
        "         control_1    control_2    control_3     tumour_1     tumour_2     tumour_3\n      7032.9440367 7410.7723575 7.136402e+03 7.102417e+03 7174.6054317 7160.9240177\nA1BG     5.7645150    4.4543900 6.945454e+00 5.826272e+00    6.6909090    3.9739970\nA1CF     0.0211616    0.0000000 8.789296e-02 1.421432e-02    0.0352926    0.0229366\nA2M    119.7816420  103.0222130 1.131782e+02 1.002309e+02   91.3623100  106.2498200\nA2ML1    0.2314672    0.0266311 8.024680e-02 4.832294e-01    0.2613149    0.5512492\nA2MP1    0.5810670",
        "    0.6913360 5.689230e-01 8.482020e-01    0.6641670    0.9355350\n",
        "> ",
        "dds <- DESeqDataSetFromTximport(txi, colData = samples, design = ~ replicate + condition)",
        "Error in DESeqDataSet(se, design = design, ignoreRank) : \n  all variables in design formula must be columns in colData\n",
        "> ",
        "dds <- DESeqDataSetFromTximport(txi, colData = samples, design = ~ replicate + condition)",
        "Error in DESeqDataSet(se, design = design, ignoreRank) : \n  all variables in design formula must be columns in colData\n",
        "> ",
        "samples$replicate <- factor(samples$replicates)",
        "> ",
        "",
        "> ",
        "factor_cols <- sapply(samples, is.factor)",
        "> ",
        "factor_cols",
        " condition replicates  replicate \n      TRUE       TRUE       TRUE \n",
        "> ",
        "dds <- DESeqDataSetFromTximport(txi, colData = samples, design = ~ replicate + condition)",
        "> ",
        "dds",
        "class: DESeqDataSet \ndim: 29938 6 \nmetadata(1): version\nassays(2): counts avgTxLength\nrownames(29938): '' A1BG ... ZZEF1 ZZZ3\nrowData names(0):\ncolnames(6): control_1 control_2 ... tumour_2 tumour_3\ncolData names(3): condition replicates replicate\n",
        "> ",
        "library(dplyr)",
        "> ",
        "library(biomaRt)",
        "> ",
        "library(tximport)",
        "> ",
        "library(rhdf5)",
        "> ",
        "library(gplots)",
        "> ",
        "library(org.Hs.eg.db)",
        "> ",
        "library(DESeq2)",
        "> ",
        "library(DT)",
        "> ",
        "library(apeglm)",
        "> ",
        "library(RColorBrewer)",
        "> ",
        "library(IHW)",
        "> ",
        "library(PCAtools)",
        "> ",
        "library(pheatmap)",
        "> ",
        "library(clusterProfiler)",
        "> ",
        "library(EnhancedVolcano)",
        "> ",
        "library(ComplexHeatmap)",
        "> ",
        "library(circlize)",
        "> ",
        "library(fgsea)",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(ggpubr)",
        "> ",
        "quant_dir <- \"/home/rstudio\"",
        "> ",
        "list.files(quant_dir)",
        " [1] \"analysis-assign.Rmd\"                 \"c6.all.v2023.2.Hs.symbols.gmt\"      \n [3] \"control_1\"                           \"control_2\"                          \n [5] \"control_3\"                           \"log2_counts.txt\"                    \n [7] \"normalised_counts.txt\"               \"samples.csv\"                        \n [9] \"tumour_1\"                            \"tumour_2\"                           \n[11] \"tumour_3\"                            \"tumour_vs_control_downregulated.txt\"\n[13] \"tumour_vs_control_upregulated.txt\"  ",
        "\n",
        "> ",
        "samples <- read.csv(paste0(quant_dir, \"/samples.csv\"), header=T, row.names = \"samples\", stringsAsFactors = T)",
        "> ",
        "samples",
        "> ",
        "samples$replicate <- factor(samples$replicates)",
        "> ",
        "",
        "> ",
        "factor_cols <- sapply(samples, is.factor)",
        "> ",
        "factor_cols",
        " condition replicates  replicate \n      TRUE      FALSE       TRUE \n",
        "> ",
        "files <- file.path(quant_dir, rownames(samples), \"abundance.tsv\")",
        "> ",
        "names(files) <- paste0(rownames(samples))",
        "> ",
        "files",
        "                              control_1                               control_2 \n\"/home/rstudio/control_1/abundance.tsv\" \"/home/rstudio/control_2/abundance.tsv\" \n                              control_3                                tumour_1 \n\"/home/rstudio/control_3/abundance.tsv\"  \"/home/rstudio/tumour_1/abundance.tsv\" \n                               tumour_2                                tumour_3 \n \"/home/rstudio/tumour_2/abundance.tsv\"  \"/home/rstudio/tumour_3/abundance.tsv\" \n",
        "> ",
        "mart <- useMart(biomart = \"ensembl\", dataset = \"hsapiens_gene_ensembl\")",
        "> ",
        "",
        "> ",
        "#The below code line is used to retrieve and display gene annotation information, specifically Ensembl transcript IDs and corresponding HGNC symbols, from an Ensembl database",
        "> ",
        "tx2gene <- getBM(attributes = c(\"ensembl_transcript_id_version\", \"hgnc_symbol\"), mart = mart, useCache = FALSE)",
        "> ",
        "head(tx2gene)",
        "> ",
        "txi <- tximport(files, type = \"kallisto\", tx2gene = tx2gene)",
        "> ",
        "head(txi$abundance)",
        "         control_1    control_2    control_3     tumour_1     tumour_2     tumour_3\n      7032.9440367 7410.7723575 7.136402e+03 7.102417e+03 7174.6054317 7160.9240177\nA1BG     5.7645150    4.4543900 6.945454e+00 5.826272e+00    6.6909090    3.9739970\nA1CF     0.0211616    0.0000000 8.789296e-02 1.421432e-02    0.0352926    0.0229366\nA2M    119.7816420  103.0222130 1.131782e+02 1.002309e+02   91.3623100  106.2498200\nA2ML1    0.2314672    0.0266311 8.024680e-02 4.832294e-01    0.2613149    0.5512492\nA2MP1    0.5810670",
        "    0.6913360 5.689230e-01 8.482020e-01    0.6641670    0.9355350\n",
        "> ",
        "dds <- DESeqDataSetFromTximport(txi, colData = samples, design = ~ replicate + condition)",
        "> ",
        "dds",
        "class: DESeqDataSet \ndim: 29938 6 \nmetadata(1): version\nassays(2): counts avgTxLength\nrownames(29938): '' A1BG ... ZZEF1 ZZZ3\nrowData names(0):\ncolnames(6): control_1 control_2 ... tumour_2 tumour_3\ncolData names(3): condition replicates replicate\n",
        "> ",
        "dds$condition <- relevel(dds$condition, ref = \"control\")",
        "> ",
        "dds <- DESeq(dds)",
        "> ",
        "resultsNames(dds)",
        "[1] \"Intercept\"                   \"replicate_2_vs_1\"            \"replicate_3_vs_1\"           \n[4] \"condition_tumour_vs_control\"\n",
        "> ",
        "counts <- counts(dds, normalized=TRUE)",
        "> ",
        "counts",
        "                   control_1    control_2    control_3     tumour_1     tumour_2     tumour_3\n                1.058867e+05 1.117533e+05 1.088504e+05 1.062864e+05 1.084834e+05 1.086125e+05\nA1BG            6.362234e+01 4.908251e+01 7.853118e+01 6.439003e+01 7.409392e+01 4.397403e+01\nA1CF            2.060818e+00 0.000000e+00 8.670978e+00 1.375892e+00 3.451544e+00 2.104751e+00\nA2M             4.816167e+03 4.148913e+03 4.610222e+03 4.005905e+03 3.689269e+03 4.303715e+03\nA2ML1           9.185674e+00 1.061093e+00 3.271588e+00",
        " 1.913117e+01 1.055706e+01 2.294046e+01\nA2MP1           3.562573e+01 4.232680e+01 3.523177e+01 5.153481e+01 4.077277e+01 5.760993e+01\nA3GALT2         9.896037e-01 0.000000e+00 0.000000e+00 9.910540e-01 0.000000e+00 0.000000e+00\nA4GALT          1.822899e+00 1.500905e+00 3.854104e-01 7.379965e+00 1.707368e+00 1.505253e+00\nA4GNT           2.968811e+00 2.015562e+00 5.033109e+00 2.973162e+00 1.988916e+00 2.021401e+00\nAAAS            1.060951e+03 1.022448e+03 1.030279e+03 1.018673e+03 9.557889e+02 1.033946e+03\nAACS           ",
        " 1.331578e+03 1.233342e+03 1.120801e+03 1.158284e+03 1.102093e+03 8.736067e+02\nAACSP1          3.497342e+00 7.395281e-01 2.162446e+00 7.272536e-01 0.000000e+00 1.483341e+00\nAADAC           9.896037e-01 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nAADACL2         0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nAADACL3         9.896037e-01 0.000000e+00 0.000000e+00 0.000000e+00 9.944578e-01 0.000000e+00\nAADACL4         0.000000e+00 0.000000e+00 0.000000e+00 9.910540e-01",
        " 9.944578e-01 0.000000e+00\nAADACP1         0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nAADAT           3.712917e+02 2.969881e+02 3.745187e+02 3.563904e+02 4.216269e+02 3.677764e+02\nAAGAB           1.625805e+03 1.594350e+03 1.503851e+03 1.281188e+03 1.488606e+03 1.372519e+03\nAAK1            8.521889e+01 6.122032e+01 8.031712e+01 1.056207e+02 8.915677e+01 8.779341e+01\nAAMDC           2.648890e+02 2.810816e+02 2.938477e+02 2.654551e+02 2.646867e+02 2.751657e+02\nAAMP           ",
        " 1.495168e+03 1.267662e+03 1.190793e+03 1.459275e+03 1.294328e+03 1.129969e+03\nAANAT           0.000000e+00 3.470851e+00 5.643254e-01 3.413128e+00 1.600612e+00 1.133224e+00\nAAR2            1.158368e+03 1.213071e+03 1.162887e+03 1.268744e+03 1.119713e+03 1.136933e+03\nAARD            1.040775e+01 1.773279e+01 1.325911e+01 1.223818e+01 1.801097e+01 9.984626e+00\nAARS1           7.316133e+03 7.656853e+03 7.226492e+03 6.526927e+03 6.037307e+03 6.030650e+03\nAARS1P1         0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00",
        " 0.000000e+00 0.000000e+00\nAARS2           6.365854e+02 6.070797e+02 5.651091e+02 6.256216e+02 5.535704e+02 4.431206e+02\nAARSD1          4.577090e+02 4.364073e+02 3.634211e+02 4.720912e+02 3.913977e+02 5.011803e+02\nAARSD1P1        1.979207e+00 3.023343e+00 7.046353e+00 3.964216e+00 2.983374e+00 3.032101e+00\nAASDH           3.752472e+02 3.995607e+02 4.415366e+02 3.493183e+02 5.250301e+02 4.140842e+02\nAASDHPPT        1.513407e+03 1.511196e+03 1.577694e+03 1.466095e+03 1.805871e+03 1.670127e+03\nAASS           ",
        " 1.201046e+03 1.416676e+03 1.311539e+03 1.119368e+03 1.358591e+03 1.558873e+03\nAATF            1.353326e+03 1.349355e+03 1.398458e+03 1.315826e+03 1.304892e+03 1.405992e+03\nAATK            2.800684e+02 1.352796e+02 1.754128e+02 2.228514e+02 1.816380e+02 1.248969e+02\nABAT            5.888697e+02 5.619316e+02 6.390434e+02 6.787058e+02 7.306614e+02 6.323369e+02\nABCA1           5.662730e+02 6.239677e+02 5.550585e+02 5.435271e+02 5.761068e+02 6.752405e+02\nABCA10          5.921147e+01 2.505589e+01 7.789273e+01 7.650565e+01",
        " 7.283177e+01 6.755621e+01\nABCA11P         1.164237e+02 1.071777e+02 1.050378e+02 1.161863e+02 1.197769e+02 1.547996e+02\nABCA12          3.308266e+02 4.154295e+02 3.858546e+02 3.773961e+02 3.449781e+02 3.493114e+02\nABCA13          5.264677e+01 6.464744e+01 6.474722e+01 8.234755e+01 1.027793e+02 8.014549e+01\nABCA15P         1.673559e+01 2.052167e+01 1.660863e+01 1.233224e+01 5.746710e+00 1.579888e+01\nABCA17P         1.228198e+01 2.417215e+00 1.984691e+00 7.815987e+00 1.960708e+00 1.614673e+01\nABCA2          ",
        " 5.800236e+02 3.799305e+02 3.415277e+02 6.666210e+02 3.296458e+02 1.888285e+02\nABCA3           1.961968e+01 3.246196e+01 4.604031e+01 1.979966e+01 1.960466e+01 5.133835e+00\nABCA3P1         0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABCA4           4.634439e+00 1.728382e-01 0.000000e+00 0.000000e+00 2.476321e+00 0.000000e+00\nABCA5           1.167370e+03 1.250356e+03 1.371329e+03 1.306159e+03 1.453139e+03 1.884097e+03\nABCA6           1.328268e+02 1.492627e+02 2.229711e+02 2.236321e+02",
        " 2.179290e+02 3.342072e+02\nABCA7           3.610638e+02 2.964071e+02 3.048858e+02 4.802209e+02 3.453955e+02 2.897187e+02\nABCA8           2.585867e+02 3.899185e+02 3.527140e+02 3.830997e+02 5.576039e+02 4.456546e+02\nABCA9           6.790077e+01 8.551703e+01 5.444434e+01 8.529449e+01 5.011718e+01 9.473348e+01\nABCB1           6.021328e+01 4.153489e+01 7.409288e+01 8.934438e+01 9.780277e+01 6.217349e+01\nABCB10          5.184579e+02 6.471369e+02 5.024887e+02 4.605499e+02 4.935799e+02 5.266276e+02\nABCB10P1       ",
        " 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABCB10P3        0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABCB10P4        0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABCB11          1.201505e+00 4.342785e+00 1.377954e+00 6.007773e+00 3.018497e+00 6.135597e-01\nABCB4           1.514900e+02 2.479678e+02 1.964832e+02 1.742212e+02 1.666595e+02 2.312008e+02\nABCB5           9.091087e+03 9.366106e+03 9.649755e+03 8.009904e+03",
        " 9.049316e+03 1.026889e+04\nABCB6           1.159758e+03 1.086646e+03 1.165028e+03 1.174037e+03 1.274445e+03 1.173786e+03\nABCB7           6.137790e+02 5.572095e+02 6.199056e+02 5.502108e+02 6.552513e+02 5.856969e+02\nABCB8           6.726734e+02 5.667369e+02 5.540378e+02 8.212538e+02 5.128108e+02 4.850537e+02\nABCB9           6.321297e+02 5.230978e+02 4.214748e+02 4.928634e+02 3.726319e+02 2.123459e+02\nABCC1           1.824707e+03 1.998257e+03 1.729414e+03 1.851577e+03 1.905808e+03 1.974561e+03\nABCC10         ",
        " 4.181187e+02 4.495709e+02 4.510042e+02 4.105231e+02 3.637690e+02 4.182758e+02\nABCC11          2.934968e+01 3.196819e+01 1.394181e+01 1.954821e+01 1.591064e+01 1.885053e+01\nABCC12          0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 1.010700e+00\nABCC13          0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABCC2           1.216558e+03 1.508158e+03 1.146757e+03 1.129946e+03 1.143735e+03 1.050054e+03\nABCC3           2.055038e+01 2.439702e+01 2.978077e+01 3.688379e+01",
        " 7.259625e+01 2.181270e+01\nABCC4           6.001506e+02 5.941069e+02 6.821523e+02 7.546978e+02 6.666808e+02 6.643914e+02\nABCC5           1.649939e+03 1.321768e+03 1.279522e+03 1.260149e+03 1.417938e+03 1.284405e+03\nABCC6           9.040059e+00 1.224720e+01 1.491002e+01 1.107290e+01 2.756345e+01 1.350464e+01\nABCC6P1         7.228515e-01 7.361290e-01 7.352823e-01 1.017171e+01 0.000000e+00 0.000000e+00\nABCC6P2         1.887823e+00 2.105563e+00 3.055728e+00 2.160819e+00 9.485415e-01 2.892102e+00\nABCC8          ",
        " 1.461624e+01 1.628750e+01 8.286516e+00 2.067971e+01 1.557596e+01 1.083534e+01\nABCC9           4.682220e+01 4.472915e+01 3.669893e+01 4.868255e+01 3.999513e+01 6.408491e+01\nABCD1           9.535001e+02 8.817864e+02 6.259397e+02 1.161727e+03 6.810523e+02 4.450205e+02\nABCD1P2         0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 9.944578e-01 0.000000e+00\nABCD1P3         0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABCD1P4         0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00",
        " 0.000000e+00 0.000000e+00\nABCD1P5         0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABCD2           9.896037e+00 1.209337e+01 5.033109e+00 1.486581e+01 1.093904e+01 1.010700e+01\nABCD3           2.313952e+03 2.577752e+03 2.551970e+03 2.560020e+03 2.743536e+03 2.951968e+03\nABCD4           6.930358e+02 7.003178e+02 5.329694e+02 7.007964e+02 6.566630e+02 6.803345e+02\nABCE1           3.301075e+03 3.060035e+03 3.696987e+03 2.828546e+03 3.122618e+03 3.628732e+03\nABCF1          ",
        " 2.075638e+03 2.445218e+03 2.406225e+03 2.200100e+03 2.394660e+03 2.418746e+03\nABCF2           1.238320e+03 1.233154e+03 1.199579e+03 1.480690e+03 1.191902e+03 1.410394e+03\nABCF2-H2BK1     6.274088e+02 6.721899e+02 7.016154e+02 6.223819e+02 7.478323e+02 7.044582e+02\nABCF2P1         0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABCF2P2         0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABCF3           1.099533e+03 1.106103e+03 9.892440e+02 1.141837e+03",
        " 1.131816e+03 8.305050e+02\nABCG1           2.338311e+01 1.196931e+01 1.460267e+01 1.021010e+01 1.629966e+01 1.089906e+01\nABCG2           4.795039e+01 5.700406e+01 6.507241e+01 5.605644e+01 5.625033e+01 6.533606e+01\nABCG4           1.384938e+01 1.021755e+01 1.046239e+01 1.375028e+01 2.298313e+01 1.969762e+01\nABCG5           1.237972e+01 1.113630e+01 1.779758e+01 3.956381e+00 8.071967e+00 1.116856e+00\nABCG8           1.385389e+01 1.498172e+01 1.589407e+01 1.742512e+01 1.606225e+01 1.277309e+01\nABHD1          ",
        " 6.306700e+00 1.399046e+01 1.106470e+01 6.046739e+00 5.872205e+00 2.990880e+00\nABHD10          1.299026e+03 1.392780e+03 1.455215e+03 1.300911e+03 1.459263e+03 1.536586e+03\nABHD11          2.243708e+02 1.790973e+02 1.626240e+02 2.067193e+02 1.692086e+02 1.141264e+02\nABHD12          1.929276e+03 1.914135e+03 1.818984e+03 1.761708e+03 1.776738e+03 1.706708e+03\nABHD12B         4.919629e+01 3.011026e+01 5.133305e+01 4.878828e+01 3.782076e+01 3.650034e+01\nABHD13          6.570969e+02 6.560654e+02 7.952313e+02 7.373442e+02",
        " 8.254000e+02 9.207481e+02\nABHD14A         1.867679e+02 1.267442e+02 1.277621e+02 1.999787e+02 1.535222e+02 1.153950e+02\nABHD14A-ACY1    1.917275e+01 2.243908e+01 6.180110e+01 1.200776e+01 3.626607e+01 2.457051e+01\nABHD14B         6.893294e+02 6.340439e+02 6.092503e+02 8.167752e+02 7.627526e+02 6.162600e+02\nABHD15          4.502697e+02 4.031124e+02 4.358673e+02 4.360638e+02 4.683896e+02 4.275263e+02\nABHD16A         6.347300e+02 5.983934e+02 5.893171e+02 6.378472e+02 5.668654e+02 4.402737e+02\nABHD16B        ",
        " 5.937622e+00 5.038905e+00 0.000000e+00 4.955270e+00 1.988916e+00 0.000000e+00\nABHD17A         4.746354e+02 3.729625e+02 2.852973e+02 5.458453e+02 2.863990e+02 1.866879e+02\nABHD17AP1       0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABHD17AP3       0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABHD17AP4       0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABHD17AP5       0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00",
        " 0.000000e+00 0.000000e+00\nABHD17AP6       0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABHD17AP7       0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABHD17AP8       0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABHD17AP9       0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABHD17B         4.626394e+02 5.368766e+02 6.007659e+02 4.975418e+02 4.997265e+02 5.952397e+02\nABHD17C        ",
        " 6.102931e+02 4.975757e+02 5.319096e+02 4.483291e+02 5.250824e+02 6.141775e+02\nABHD18          7.633086e+01 1.292922e+02 1.117706e+02 1.196420e+02 1.011433e+02 1.069612e+02\nABHD2           3.031924e+03 2.301229e+03 2.883249e+03 3.332207e+03 3.272638e+03 3.267741e+03\nABHD3           6.682786e+02 6.354473e+02 5.726901e+02 5.815573e+02 5.507101e+02 5.886503e+02\nABHD4           1.746068e+03 1.658978e+03 1.380221e+03 1.785096e+03 1.522517e+03 1.317308e+03\nABHD5           4.302909e+02 4.061572e+02 4.131185e+02 3.826406e+02",
        " 4.101305e+02 4.647958e+02\nABHD6           7.015247e+02 7.324268e+02 7.864637e+02 7.432949e+02 8.100885e+02 7.187027e+02\nABHD8           4.948019e+01 4.333458e+01 4.127150e+01 8.721276e+01 3.381157e+01 3.739592e+01\nABI1            2.197750e+03 2.089380e+03 2.331197e+03 2.042670e+03 2.242353e+03 2.456340e+03\nABI1P1          0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABI2            1.620558e+03 2.209211e+03 1.989953e+03 2.089097e+03 1.769742e+03 1.967662e+03\nABI3           ",
        " 0.000000e+00 0.000000e+00 1.006622e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABI3BP          5.725793e+00 2.037677e+01 1.354483e+01 1.416813e+01 7.630206e+00 6.779973e+00\nABITRAM         3.058341e+02 3.117802e+02 3.809369e+02 4.388700e+02 3.299850e+02 4.618713e+02\nABITRAMP1       0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABL1            2.616680e+03 2.788739e+03 2.352871e+03 3.108188e+03 2.480410e+03 2.077846e+03\nABL2            8.757887e+03 9.767757e+03 8.745985e+03 7.407540e+03",
        " 7.136855e+03 8.155259e+03\nABLIM1          3.365302e+02 2.189172e+02 2.975617e+02 1.489366e+02 1.255072e+02 1.691125e+02\nABLIM2          1.812562e+00 1.845856e+00 8.759052e-01 5.355153e+00 2.423612e+00 1.682663e+00\nABLIM3          5.210412e+02 4.118589e+02 4.184929e+02 4.248723e+02 4.452796e+02 3.988042e+02\nABO             1.180537e+01 7.933340e+00 6.867833e+00 5.804568e+00 1.015557e+01 1.093768e+01\nABR             4.180020e+03 4.116637e+03 4.084764e+03 3.804015e+03 3.662640e+03 3.909935e+03\nABRA           ",
        " 1.979207e+00 0.000000e+00 1.006622e+00 9.910540e-01 1.988916e+00 0.000000e+00\nABRACL          1.252541e+03 1.265212e+03 1.297474e+03 1.057667e+03 1.214716e+03 1.228032e+03\nABRAXAS1        2.949460e+02 3.675957e+02 3.627544e+02 3.683822e+02 3.992978e+02 4.042533e+02\nABRAXAS1P1      0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABRAXAS1P2      1.979207e+00 9.070028e+00 7.046353e+00 2.973162e+00 8.950121e+00 8.085604e+00\nABRAXAS2        7.323068e+02 7.901002e+02 7.761055e+02 6.808541e+02",
        " 7.627492e+02 8.035069e+02\nABT1            3.641742e+02 3.255132e+02 2.909137e+02 3.508331e+02 3.450769e+02 2.668249e+02\nABT1P1          0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00\nABTB1           1.875628e+02 1.300071e+02 1.249700e+02 1.985879e+02 1.493870e+02 8.889167e+01\nABTB2           6.224607e+02 6.318786e+02 5.194169e+02 6.560778e+02 5.141347e+02 4.285370e+02\nABTB3           6.054325e+00 1.712411e+00 1.514022e+00 1.587294e+00 8.448865e-01 1.520156e+00\nACAA1          ",
        " 1.357326e+03 1.308318e+03 1.171422e+03 1.611408e+03 1.287135e+03 1.114650e+03\nACAA2           1.699326e+03 1.659893e+03 1.739430e+03 1.637368e+03 1.926244e+03 1.852339e+03\nACAA2P1         2.603685e+00 2.654492e+00 2.642988e+00 1.507186e+00 1.512363e+00 7.685321e-01\nACACA           3.670629e+03 3.418092e+03 4.614621e+03 3.572997e+03 3.491849e+03 3.399236e+03\nACACB           5.941987e+02 4.598695e+02 5.497548e+02 5.324452e+02 4.788012e+02 5.277352e+02\nACAD10          7.212509e+02 7.766371e+02 8.517367e+02 6.892131e+02",
        " 8.373994e+02 7.904988e+02\nACAD11          9.043839e+02 9.957145e+02 9.096790e+02 8.594129e+02 1.010869e+03 1.037247e+03\nACAD8           5.698261e+02 6.343268e+02 5.722056e+02 5.400525e+02 7.599705e+02 5.911576e+02\nACAD9           1.044735e+03 1.000867e+03 9.682262e+02 9.349442e+02 9.374827e+02 1.103234e+03\nACADL           8.663705e+00 1.114973e+01 8.812694e+00 6.073482e+00 1.530097e+01 1.769680e+00\nACADM           2.429879e+03 2.654714e+03 2.671353e+03 2.296388e+03 2.331066e+03 2.626064e+03\nACADS          ",
        " 2.252189e+02 1.811269e+02 1.608912e+02 2.342213e+02 1.464654e+02 9.274204e+01\nACADSB          9.799527e+02 9.881412e+02 9.395241e+02 8.253094e+02 9.617883e+02 1.380059e+03\n [ reached getOption(\"max.print\") -- omitted 29772 rows ]\n",
        "> ",
        "log2_counts <- assay(normTransform(dds))",
        "> ",
        "rld_counts <- assay(rlog(dds))",
        "> ",
        "",
        "> ",
        "library(vsn)",
        "> ",
        "library(hexbin)",
        "> ",
        "",
        "> ",
        "## x-axis is the transformed mean not the raw mean.",
        "> ",
        "",
        "> ",
        "log2_plt <- meanSdPlot(log2_counts, ranks=FALSE, plot=FALSE)",
        "> ",
        "log2_plt$gg + ggtitle(\"Log2 + PC Transformation\") + xlim(0,20)",
        "> ",
        "",
        "> ",
        "rld_plt <- meanSdPlot(rld_counts, ranks=FALSE, plot=FALSE)",
        "> ",
        "rld_plt$gg + ggtitle(\"Rlog Transformation\") + xlim(0,20)",
        "> ",
        "#dir.create(\"/home/rstudio/counts\")",
        "> ",
        "write.table(counts, \"normalised_counts.txt\", sep=\"\\t\", quote = F)",
        "> ",
        "write.table(log2_counts, \"log2_counts.txt\", sep=\"\\t\", quote = F)",
        "> ",
        "## Calculate distance between samples",
        "> ",
        "sampleDists <- dist(t(rld_counts))",
        "> ",
        "",
        "> ",
        "## Place distances in matrix",
        "> ",
        "sampleDistMatrix <- as.matrix(sampleDists)",
        "> ",
        "",
        "> ",
        "## Optional, remove colnames",
        "> ",
        "colnames(sampleDistMatrix) <- NULL",
        "> ",
        "",
        "> ",
        "## create annotation dataframe",
        "> ",
        "ann <- data.frame(Condition = samples$condition)",
        "> ",
        "",
        "> ",
        "col <- c(\"forestgreen\", \"red1\")",
        "> ",
        "names(col) <- c(\"tumour\", \"control\")",
        "> ",
        "ann_col <- list(Condition = col)",
        "> ",
        "",
        "> ",
        "## match annotation rownames to distance mat",
        "> ",
        "rownames(ann) <- rownames(sampleDistMatrix)",
        "> ",
        "",
        "> ",
        "pheatmap(mat=sampleDistMatrix,",
        "+ ",
        "         ## pass distance metric calculated to heatmap",
        "+ ",
        "         clustering_distance_rows=sampleDists,",
        "+ ",
        "         clustering_distance_cols=sampleDists,",
        "+ ",
        "         ## pass annotation dataframe ",
        "+ ",
        "         annotation_col = ann,",
        "+ ",
        "         ## add colors",
        "+ ",
        "         annotation_colors = ann_col,",
        "+ ",
        "         ## heatmap colours",
        "+ ",
        "         col=hcl.colors(100,\"GnBu\",rev=T))",
        "> ",
        "p <- pca(rld_counts, metadata = samples)",
        "> ",
        "",
        "> ",
        "biplot(p,",
        "+ ",
        "       colby = 'condition',",
        "+ ",
        "       colkey = c('control'='red1', 'tumour'='forestgreen'),",
        "+ ",
        "       hline = 0,",
        "+ ",
        "       vline = 0,",
        "+ ",
        "       legendPosition = 'right',",
        "+ ",
        "       legendLabSize = 12,",
        "+ ",
        "       legendIconSize = 8.0,",
        "+ ",
        "       title = 'PCA bi-plot',",
        "+ ",
        "       subtitle = 'PC1 versus PC2')",
        "> ",
        "# make tumour vs control object",
        "> ",
        "tumour_v_ctrl <- results(dds, filterFun=ihw, alpha=0.05, c(\"condition\", \"tumour\", \"control\"))",
        "> ",
        "res1 <- lfcShrink(dds=dds, res=tumour_v_ctrl, coef=4, type=\"apeglm\")",
        "> ",
        "summary(res1)",
        "\nout of 21474 with nonzero total read count\nadjusted p-value < 0.05\nLFC > 0 (up)       : 269, 1.3%\nLFC < 0 (down)     : 199, 0.93%\noutliers [1]       : 0, 0%\n[1] see 'cooksCutoff' argument of ?results\nsee metadata(res)$ihwResult on hypothesis weighting\n\n",
        "> ",
        "# to make tumour vs control re level the dds object reference level and redo the DESeq call",
        "> ",
        "dds$condition <- relevel(dds$condition, ref = \"control\")",
        "> ",
        "dds <- DESeq(dds)",
        "> ",
        "",
        "> ",
        "# double check it worked",
        "> ",
        "resultsNames(dds)",
        "[1] \"Intercept\"                   \"replicate_2_vs_1\"            \"replicate_3_vs_1\"           \n[4] \"condition_tumour_vs_control\"\n",
        "> ",
        "get_upregulated <- function(df){",
        "+ ",
        "\tkey <- intersect(rownames(df)[which(df$log2FoldChange>=1)], rownames(df)[which(df$pvalue<=0.05)])",
        "+ ",
        "  results <- as.data.frame((df)[which(rownames(df) %in% key),])",
        "+ ",
        "\treturn(results)",
        "+ ",
        "}",
        "> ",
        "get_downregulated <- function(df){",
        "+ ",
        "  \tkey <- intersect(rownames(df)[which(df$log2FoldChange<=-1)], rownames(df)[which(df$pvalue<=0.05)])",
        "+ ",
        "  \tresults <- as.data.frame((df)[which(rownames(df) %in% key),])",
        "+ ",
        "  \treturn(results)",
        "+ ",
        "}",
        "> ",
        "annotate_de_genes <- function(df){",
        "+ ",
        "",
        "+ ",
        "    df$hgnc_symbol <- rownames(df)",
        "+ ",
        "    mart <- useMart(biomart = \"ensembl\", dataset = \"hsapiens_gene_ensembl\")",
        "+ ",
        "    info <- getBM(attributes=c(\"hgnc_symbol\",",
        "+ ",
        "                               \"ensembl_gene_id_version\",",
        "+ ",
        "                               \"chromosome_name\",",
        "+ ",
        "                               \"start_position\",",
        "+ ",
        "                               \"end_position\",",
        "+ ",
        "                               \"strand\",",
        "+ ",
        "                               \"entrezgene_description\"),",
        "+ ",
        "                  filters = c(\"hgnc_symbol\"),",
        "+ ",
        "                  values = df$hgnc_symbol,",
        "+ ",
        "                  mart = mart,",
        "+ ",
        "                  useCache=FALSE)",
        "+ ",
        "",
        "+ ",
        "    tmp <- merge(df, info, by=\"hgnc_symbol\")",
        "+ ",
        "    tmp$strand <- gsub(\"-1\", \"-\", tmp$strand)",
        "+ ",
        "    tmp$strand <- gsub(\"1\", \"+\", tmp$strand)",
        "+ ",
        "    tmp$hgnc_symbol <- make.names(tmp$hgnc_symbol, unique = T)",
        "+ ",
        "    tmp <- tmp[!grepl(\"CHR\", tmp$chromosome_name),]",
        "+ ",
        "",
        "+ ",
        "    output_col <- c(\"Gene\", \"Ensembl ID\", \"Chromosome\", \"Start\", \"Stop\", \"Strand\", \"Description\", \"Log2FC\", \"P-value\", \"Adj P-value\")",
        "+ ",
        "    tmp <- subset(tmp, select=c(hgnc_symbol, ensembl_gene_id_version, chromosome_name, start_position, end_position, strand, entrezgene_description, log2FoldChange, pvalue, padj))",
        "+ ",
        "    colnames(tmp) <- output_col",
        "+ ",
        "",
        "+ ",
        "    if(min(tmp$Log2FC) > 0){",
        "+ ",
        "        tmp <- tmp[order(-tmp$Log2FC),]",
        "+ ",
        "    }else{",
        "+ ",
        "        tmp <- tmp[order(tmp$Log2FC),]",
        "+ ",
        "    }",
        "+ ",
        "",
        "+ ",
        "    return(tmp)",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "de_up <- get_upregulated(as.data.frame(res1))",
        "> ",
        "de_down <- get_downregulated(as.data.frame(res1))",
        "> ",
        "upregulated_genes <- annotate_de_genes(de_up)",
        "> ",
        "downregulated_genes <- annotate_de_genes(de_down)",
        "> ",
        "",
        "> ",
        "#confirm these worked",
        "> ",
        "head(upregulated_genes)",
        "> ",
        "head(downregulated_genes)",
        "> ",
        "#dir.create(\"/home/rstudio/DESeq_results/\")",
        "> ",
        "write.table(upregulated_genes, \"tumour_vs_control_upregulated.txt\", sep=\"\\t\", row.names=F, quote=F)",
        "> ",
        "write.table(downregulated_genes, \"tumour_vs_control_downregulated.txt\", sep=\"\\t\", row.names=F, quote=F)",
        "> ",
        "## remove NA values from results",
        "> ",
        "res1 <- na.omit(res1)",
        "> ",
        "",
        "> ",
        "## Min/max axis values for plot",
        "> ",
        "min_width <- min(res1$log2FoldChange)",
        "> ",
        "max_width <- max(res1$log2FoldChange)",
        "> ",
        "max_height <- -log10(min(res1[res1$pvalue>0, 5]))",
        "> ",
        "",
        "> ",
        "## Grab top 10 up-reg genes for plot",
        "> ",
        "up <- subset(res1, res1$log2FoldChange > 1 & res1$pvalue <= 0.05)",
        "> ",
        "up <- up[order(-up$log2FoldChange),]",
        "> ",
        "up_list <- head(rownames(up), n=10L)",
        "> ",
        "",
        "> ",
        "## Grab top 10 down-reg genes for plot",
        "> ",
        "down <- subset(res1, res1$log2FoldChange < -1 & res1$pvalue <= 0.05)",
        "> ",
        "down <- down[order(down$log2FoldChange),]",
        "> ",
        "down_list <- head(rownames(down), n=10L)",
        "> ",
        "",
        "> ",
        "## place top 20 DE genes in vector",
        "> ",
        "plot_top_20 <- c(up_list, down_list)",
        "> ",
        "",
        "> ",
        "EnhancedVolcano(res1,",
        "+ ",
        "                lab=rownames(res1),",
        "+ ",
        "                x=\"log2FoldChange\",",
        "+ ",
        "                y=\"pvalue\",",
        "+ ",
        "                selectLab=plot_top_20,",
        "+ ",
        "                drawConnectors=TRUE,",
        "+ ",
        "                legendPosition = \"none\",",
        "+ ",
        "                FCcutoff=1.0,",
        "+ ",
        "                pCutoff=0.05,",
        "+ ",
        "                title=\"Volcano Plot\",",
        "+ ",
        "                subtitle=\"Tumour vs. Control\",",
        "+ ",
        "                caption = paste0('Total Genes = ', nrow(res1)),",
        "+ ",
        "                xlim=c(min_width, max_width),",
        "+ ",
        "                ylim=c(0, max_height))",
        "> ",
        "# subset the counts matrix to get the lung and control samples",
        "> ",
        "subset <- rld_counts[, 1:6]",
        "> ",
        "",
        "> ",
        "# now select de_up, de_down, i.e DE genes that passed the filtering our function produced",
        "> ",
        "up <- rownames(de_up)",
        "> ",
        "down <- rownames(de_down)",
        "> ",
        "",
        "> ",
        "# subset matrix to include only DE genes",
        "> ",
        "key <- c(up, down)",
        "> ",
        "subset <- subset[which(rownames(subset) %in% key),]",
        "> ",
        "",
        "> ",
        "# scale and center the values",
        "> ",
        "mat <- as.matrix(scale(t(subset), center = T))",
        "> ",
        "",
        "> ",
        "# basic plot to check we're plotting something sensible",
        "> ",
        "# pheatmap(t(mat))",
        "> ",
        "",
        "> ",
        "# spruce it up a bit..",
        "> ",
        "ann <- data.frame(Condition = c(rep(\"Control\", 3), rep(\"Tumour\", 3)))",
        "> ",
        "rownames(ann) <- rownames(mat)",
        "> ",
        "col <- c(\"blue\", \"forestgreen\")",
        "> ",
        "names(col) <- c(\"Control\", \"Tumour\")",
        "> ",
        "ann_col <- list(Condition = col)",
        "> ",
        "",
        "> ",
        "pheatmap(t(mat), ",
        "+ ",
        "         show_rownames = FALSE,",
        "+ ",
        "         annotation_col = ann,",
        "+ ",
        "         annotation_colors = ann_col,",
        "+ ",
        "         color = hcl.colors(100, \"PRGn\",rev=F))",
        "> ",
        "## convert result object to dataframe",
        "> ",
        "res <- as.data.frame(res1) #tumour vs control",
        "> ",
        "res$hgnc_symbol <- rownames(res)",
        "> ",
        "",
        "> ",
        "# compute summary stat",
        "> ",
        "fgsea_rank <- res %>%",
        "+ ",
        "              dplyr::select(hgnc_symbol, log2FoldChange) %>%",
        "+ ",
        "              na.omit() %>%",
        "+ ",
        "              distinct() %>%",
        "+ ",
        "              group_by(hgnc_symbol) %>%",
        "+ ",
        "              summarize(stat=mean(log2FoldChange))",
        "> ",
        "",
        "> ",
        "fgsea_rank",
        "> ",
        "# create named list",
        "> ",
        "rank <- deframe(fgsea_rank)",
        "> ",
        "head(rank, 20)",
        "                       A1BG          A1CF           A2M         A2ML1         A2MP1       A3GALT2 \n-9.355768e-03 -3.270580e-03  2.773951e-04 -1.284149e-01  1.943566e-02  1.579854e-02 -1.666595e-06 \n       A4GALT         A4GNT          AAAS          AACS        AACSP1         AADAC       AADACL3 \n 3.278406e-03 -1.359387e-03 -2.064792e-02 -1.417992e-01 -2.394784e-03 -6.774471e-04 -5.010265e-05 \n      AADACL4         AADAT         AAGAB          AAK1         AAMDC          AAMP \n 1.200635e-03  3.039472e-02 -1.075084e-01 ",
        " 2.449760e-02 -1.166257e-02 -1.200673e-02 \n",
        "> ",
        "# read in gmt file",
        "> ",
        "pathway <- gmtPathways(\"/home/rstudio/c6.all.v2023.2.Hs.symbols.gmt\")",
        "> ",
        "head(pathway, 1)",
        "$AKT_UP.V1_DN\n  [1] \"ACKR3\"    \"ADGRL1\"   \"ADHFE1\"   \"ALPL\"     \"AMPD2\"    \"ANGPTL4\"  \"AQP5\"     \"ASF1A\"    \"ASS1\"    \n [10] \"AXIN2\"    \"BCS1L\"    \"BEX4\"     \"BLVRB\"    \"BTBD2\"    \"C11orf71\" \"C1R\"      \"C1S\"      \"CAP2\"    \n [19] \"CAV2\"     \"CBS\"      \"CD248\"    \"CDC42BPA\" \"CDH16\"    \"CDPF1\"    \"CELA1\"    \"CHAD\"     \"CHN2\"    \n [28] \"CHST12\"   \"CNN2\"     \"COL17A1\"  \"CSDC2\"    \"DNAJA3\"   \"DPT\"      \"DRAM1\"    \"EDARADD\"  \"EFEMP1\"  \n [37] \"EFEMP2\"   \"EIF4E3\"   \"ESR2\"     \"EXOSC1\"   \"FAH\"      \"FAM20C\"   \"FANK1\"   ",
        " \"FAS\"      \"FBXO32\"  \n [46] \"FHOD3\"    \"FKBP11\"   \"FMO2\"     \"FMO3\"     \"FUT10\"    \"FUT8\"     \"FXYD1\"    \"G6PC2\"    \"GALNT16\" \n [55] \"GAS1\"     \"GATAD2B\"  \"GHR\"      \"GNA14\"    \"GNMT\"     \"GRAMD1A\"  \"GSPT2\"    \"GSTA4\"    \"HEBP1\"   \n [64] \"HIC1\"     \"HMGCS2\"   \"HPS1\"     \"HTRA1\"    \"IBSP\"     \"ID3\"      \"IFFO1\"    \"IFRD2\"    \"IL13RA1\" \n [73] \"IL17RC\"   \"IRS1\"     \"IRS2\"     \"ISLR\"     \"ITGBL1\"   \"ITIH5\"    \"ITPKB\"    \"KCNK3\"    \"KCNN4\"   \n [82] \"KCTD12\"   \"KLF2\"     \"KRT15\"    \"KRT5\"     \"LIMD1\"    \"LPL\"     ",
        " \"LTC4S\"    \"MATN2\"    \"MEPE\"    \n [91] \"MERTK\"    \"MMAA\"     \"MOCOS\"    \"MRPS6\"    \"MSL2\"     \"MSRB2\"    \"MYOC\"     \"NAT8\"     \"NCAM1\"   \n[100] \"NID1\"     \"NR1D1\"    \"NT5DC3\"   \"OGN\"      \"PADI3\"    \"PAQR7\"    \"PDE4B\"    \"PDE9A\"    \"PDGFRA\"  \n[109] \"PDIA5\"    \"PDLIM3\"   \"PDLIM4\"   \"PDZRN3\"   \"PHF1\"     \"PI16\"     \"PKP1\"     \"PLA2G4A\"  \"PLEK2\"   \n[118] \"PLPP3\"    \"PLTP\"     \"PM20D1\"   \"PNLIPRP1\" \"POLD2\"    \"POLI\"     \"PPP1R3C\"  \"PROM1\"    \"PTGIS\"   \n[127] \"PUS7\"     \"RAMP1\"    \"RCE1\"     \"RECK\"     \"RMND1\"   ",
        " \"RNF25\"    \"RORC\"     \"RPAP3\"    \"RPS6KB2\" \n[136] \"RTKN\"     \"RXRB\"     \"S1PR3\"    \"SASH1\"    \"SATB1\"    \"SCARA3\"   \"SCARA5\"   \"SCCPDH\"   \"SERPINF2\"\n[145] \"SFRP2\"    \"SH3BGR\"   \"SIRT3\"    \"SIX5\"     \"SLC18A1\"  \"SLC22A12\" \"SLC37A4\"  \"SLC39A13\" \"SLC39A4\" \n[154] \"SLC7A5\"   \"SLCO3A1\"  \"SLIT3\"    \"SMARCD3\"  \"SNHG6\"    \"STAT5A\"   \"STMP1\"    \"SULT1E1\"  \"SYPL2\"   \n[163] \"TCAF2\"    \"TCF21\"    \"TCF3\"     \"TEC\"      \"TIMP3\"    \"TNFRSF19\" \"TNNC2\"    \"TNS2\"     \"TP53I13\" \n[172] \"TPD52L1\"  \"TSPAN4\"   \"TSPYL4\"   \"TULP3\"   ",
        " \"TYW1\"     \"UPB1\"     \"VSIG2\"    \"WIF1\"     \"ZC3H12C\" \n[181] \"ZDHHC6\"   \"ZEB1\"     \"ZFYVE21\"  \"ZNF213\"   \"ZNF385A\"  \"ZNF771\"   \"ZSCAN26\" \n\n",
        "> ",
        "# run fgsea",
        "> ",
        "fgsea <- fgsea(pathways=pathway, stats=rank, nperm=1000)",
        "> ",
        "",
        "> ",
        "fgseaResTidy <- fgsea %>%",
        "+ ",
        "  as_tibble() %>%",
        "+ ",
        "  arrange(desc(NES))",
        "> ",
        "",
        "> ",
        "# Show in a nice table:",
        "> ",
        "fgseaResTidy %>%",
        "+ ",
        "  dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%",
        "+ ",
        "  arrange(padj) %>%",
        "+ ",
        "  DT::datatable()",
        "> ",
        "filtered_pathway <- subset(fgsea, NES > 1.8)",
        "> ",
        "filtered_pathway",
        "> ",
        "filt_up <- as.vector(filtered_pathway$pathway)",
        "> ",
        "",
        "> ",
        "for (i in filt_up){",
        "+ ",
        "    plt <- plotEnrichment(pathway = pathway[[i]],",
        "+ ",
        "    gseaParam = 1, ticksSize = 0.5, stats= rank) +",
        "+ ",
        "    labs(title=i) + theme(plot.title = element_text(hjust = 0.5, face=\"bold\"))",
        "+ ",
        "    print(plt)",
        "+ ",
        "}",
        "> ",
        "filtered_pathway <- subset(fgsea, NES < -1.5)",
        "> ",
        "filtered_pathway",
        "> ",
        "filt_down <- as.vector(filtered_pathway$pathway)",
        "> ",
        "",
        "> ",
        "for (i in filt_down){",
        "+ ",
        "    plt <- plotEnrichment(pathway = pathway[[i]],",
        "+ ",
        "    gseaParam = 1, ticksSize = 0.5, stats= rank) +",
        "+ ",
        "    labs(title=i) + theme(plot.title = element_text(hjust = 0.5, face=\"bold\"))",
        "+ ",
        "    print(plt)",
        "+ ",
        "}"
    ]
}